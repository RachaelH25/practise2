{"ast":null,"code":"var _jsxFileName = \"/home/racsh25/practise2/practise2/client/src/Pages/MyList2.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"../CSS/MyList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyList() {\n  _s();\n  const [newItem, setNewItem] = useState(\"\");\n  const [goals, setGoals] = useState([]);\n  function handleSubmit(event) {\n    event.preventDefault();\n    setGoals(currentGoals => {\n      return [...currentGoals, {\n        id: crypto.randomUUID(),\n        title: newItem,\n        completed: false\n      }];\n    });\n    setNewItem(\"\");\n  }\n  function toggleGoal(id, completed) {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"new-goal-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newItem,\n          onChange: event => setNewItem(event.target.value),\n          type: \"text\",\n          id: \"item\",\n          placeholder: \"Add a goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"My List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: goals.map(goal => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: goal.completed,\n              onChange: event => toggleGoal(goal.id, event.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this), goal.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-delete\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, goal.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(MyList, \"j7t2zVGFjCAZWZ1gQFCguY+yKG8=\");\n_c = MyList;\nvar _c;\n$RefreshReg$(_c, \"MyList\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","MyList","_s","newItem","setNewItem","goals","setGoals","handleSubmit","event","preventDefault","currentGoals","id","crypto","randomUUID","title","completed","toggleGoal","className","children","onSubmit","value","onChange","target","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","goal","checked","_c","$RefreshReg$"],"sources":["/home/racsh25/practise2/practise2/client/src/Pages/MyList2.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"../CSS/MyList.css\";\n\nexport default function MyList() {\n    const [newItem, setNewItem] = useState(\"\");\n    const [goals, setGoals] = useState([]);\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        setGoals((currentGoals) => {\n            return [...currentGoals, { id: crypto.randomUUID(), title: newItem, completed: false }];\n        });\n        setNewItem(\"\");\n    }\n\n    function toggleGoal(id, completed) {}\n\n    return (\n        <div className=\"list-container\">\n            <form onSubmit={handleSubmit} className=\"new-goal-form\">\n                <div className=\"form-row\">\n                    <input\n                        value={newItem}\n                        onChange={(event) => setNewItem(event.target.value)}\n                        type=\"text\"\n                        id=\"item\"\n                        placeholder=\"Add a goal\"\n                    ></input>\n                </div>\n                <button className=\"btn\">Add</button>\n            </form>\n            <h2 className=\"header\">My List</h2>\n            <ul className=\"list\">\n                {goals.map((goal) => {\n                    return (\n                        <li key={goal.id}>\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={goal.completed}\n                                    onChange={(event) => toggleGoal(goal.id, event.target.checked)}\n                                />\n                                {goal.title}\n                            </label>\n                            <button className=\"btn btn-delete\">Delete</button>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}